{
  "name": "obs",
  "Titles": {
    "TreeList": {
      "summary": "Introduction"
    },
    "Detail": {
      "Query": "Query",
      "Request": "Request",
      "EventViewer": "Event Viewer",
      "Params": "Params",
      "Response": "Response"
    }
  },
  "QueryHeaders": {
    "Params": "Params",
    "Value": "Value",
    "Type": "Type",
    "Des": "Description",
    "ValueRestrictions": "Value Restrictions",
    "DefaultBehavior": "Default Behavior"
  },
  "RequestDes": {
    "GetVersion": "Gets data about the current plugin and RPC version.",
    "GetStats": "Gets statistics about OBS, obs-websocket, and the current session.",
    "BroadcastCustomEvent": "Broadcasts a CustomEvent to all WebSocket clients. Receivers are clients which are identified and subscribed.",
    "CallVendorRequest": "Call a request registered to a vendor.<br><br>A vendor is a unique name registered by a third-party plugin or script, which allows for custom requests and events to be added to obs-websocket. If a plugin or script implements vendor requests or events, documentation is expected to be provided with them.",
    "GetHotkeyList": "Gets an array of all hotkey names in OBS.<br><br>Note: Hotkey functionality in obs-websocket comes as-is, and we do not guarantee support if things are broken. In 9/10 usages of hotkey requests, there exists a better, more reliable method via other requests.",
    "TriggerHotkeyByName": "Triggers a hotkey using its name. See GetHotkeyList.<br><br>Note: Hotkey functionality in obs-websocket comes as-is, and we do not guarantee support if things are broken. In 9/10 usages of hotkey requests, there exists a better, more reliable method via other requests.",
    "TriggerHotkeyByKeySequence": "Triggers a hotkey using a sequence of keys.<br><br>Note: Hotkey functionality in obs-websocket comes as-is, and we do not guarantee support if things are broken. In 9/10 usages of hotkey requests, there exists a better, more reliable method via other requests.",
    "Sleep": "Sleeps for a time duration or number of frames. Only available in request batches with types SERIAL_REALTIME or SERIAL_FRAME.",
    "GetPersistentData": "Gets the value of a 'slot' from the selected persistent data realm.",
    "SetPersistentData": "Sets the value of a 'slot' from the selected persistent data realm.",
    "GetSceneCollectionList": "Gets an array of all scene collections",
    "SetCurrentSceneCollection": "Switches to a scene collection.<br><br>Note: This will block until the collection has finished changing.",
    "CreateSceneCollection": "Creates a new scene collection, switching to it in the process.<br><br>Note: This will block until the collection has finished changing.",
    "GetProfileList": "Gets an array of all profiles",
    "SetCurrentProfile": "Switches to a profile.",
    "CreateProfile": "Creates a new profile, switching to it in the process",
    "RemoveProfile": "Removes a profile. If the current profile is chosen, it will change to a different profile first.",
    "GetProfileParameter": "Gets a parameter from the current profile's configuration.",
    "SetProfileParameter": "Sets the value of a parameter in the current profile's configuration.",
    "GetVideoSettings": "Gets the current video settings.<br><br>Note: To get the true FPS value, divide the FPS numerator by the FPS denominator. Example: 60000/1001",
    "SetVideoSettings": "Sets the current video settings.<br><br>Note: Fields must be specified in pairs. For example, you cannot set only baseWidth without needing to specify baseHeight.",
    "GetStreamServiceSettings": "Gets the current stream service settings (stream destination).",
    "SetStreamServiceSettings": "Sets the current stream service settings (stream destination).<br><br>Note: Simple RTMP settings can be set with type rtmp_custom and the settings fields server and key.",
    "GetRecordDirectory": "Gets the current directory that the record output is set to.",
    "SetRecordDirectory": "Sets the current directory that the record output writes files to.",
    "GetSourceActive": "Gets the active and show state of a source.<br><br>Compatible with inputs and scenes.",
    "GetSourceScreenshot": "Gets a Base64-encoded screenshot of a source.<br><br>The imageWidth and imageHeight parameters are treated as 'scale to inner', meaning the smallest ratio will be used and the aspect ratio of the original resolution is kept. If imageWidth and imageHeight are not specified, the compressed image will use the full resolution of the source.<br><br>Compatible with inputs and scenes.",
    "SaveSourceScreenshot": "Saves a screenshot of a source to the filesystem.<br><br>The imageWidth and imageHeight parameters are treated as 'scale to inner', meaning the smallest ratio will be used and the aspect ratio of the original resolution is kept. If imageWidth and imageHeight are not specified, the compressed image will use the full resolution of the source.<br><br>Compatible with inputs and scenes.",
    "GetSceneList": "Gets an array of all scenes in OBS.",
    "GetGroupList": "Gets an array of all groups in OBS.<br><br>Groups in OBS are actually scenes, but renamed and modified. In obs-websocket, we treat them as scenes where we can.",
    "GetCurrentProgramScene": "Gets the current program scene.<br><br>Note: This request is slated to have the currentProgram-prefixed fields removed from in an upcoming RPC version.",
    "SetCurrentProgramScene": "Sets the current program scene.",
    "GetCurrentPreviewScene": "Gets the current preview scene.<br><br>Only available when studio mode is enabled.<br><br>Note: This request is slated to have the currentPreview-prefixed fields removed from in an upcoming RPC version.",
    "SetCurrentPreviewScene": "Sets the current preview scene.<br><br>Only available when studio mode is enabled.",
    "CreateScene": "Creates a new scene in OBS.",
    "RemoveScene": "Removes a scene from OBS.",
    "SetSceneName": "Sets the name of a scene (rename).",
    "GetSceneSceneTransitionOverride": "Gets the scene transition overridden for a scene.<br><br>Note: A transition UUID response field is not currently able to be implemented as of 2024-1-18.",
    "SetSceneSceneTransitionOverride": "Sets the scene transition overridden for a scene.",
    "GetInputList": "Gets an array of all inputs in OBS.",
    "GetInputKindList": "Gets an array of all available input kinds in OBS.",
    "GetSpecialInputs": "Gets the names of all special inputs.",
    "CreateInput": "Creates a new input, adding it as a scene item to the specified scene.",
    "RemoveInput": "Removes an existing input.<br><br>Note: Will immediately remove all associated scene items.",
    "SetInputName": "Sets the name of an input (rename).",
    "GetInputDefaultSettings": "Gets the default settings for an input kind.",
    "GetInputSettings": "Gets the settings of an input.<br><br>Note: Does not include defaults. To create the entire settings object, overlay inputSettings over the defaultInputSettings provided by GetInputDefaultSettings.",
    "SetInputSettings": "Sets the settings of an input",
    "GetInputMute": "Gets the audio mute state of an input.",
    "SetInputMute": "Sets the audio mute state of an input.",
    "ToggleInputMute": "Toggles the audio mute state of an input.",
    "GetInputVolume": "Gets the current volume setting of an input.",
    "SetInputVolume": "Sets the volume setting of an input.",
    "GetInputAudioBalance": "Gets the audio balance of an input.",
    "SetInputAudioBalance": "Sets the audio balance of an input.",
    "GetInputAudioSyncOffset": "Gets the audio sync offset of an input.<br><br>Note: The audio sync offset can be negative too!",
    "SetInputAudioSyncOffset": "Sets the audio sync offset of an input.",
    "GetInputAudioMonitorType": "Gets the audio monitor type of an input.<br><br>The available audio monitor types are:<br>OBS_MONITORING_TYPE_NONE<br>OBS_MONITORING_TYPE_MONITOR_ONLY<br>OBS_MONITORING_TYPE_MONITOR_AND_OUTPUT",
    "SetInputAudioMonitorType": "Sets the audio monitor type of an input.",
    "GetInputAudioTracks": "Gets the enable state of all audio tracks of an input.",
    "SetInputAudioTracks": "Sets the enable state of audio tracks of an input.",
    "GetInputPropertiesListPropertyItems": "Gets the items of a list property from an input's properties.<br><br>Note: Use this in cases where an input provides a dynamic, selectable list of items. For example, display capture, where it provides a list of available displays.",
    "PressInputPropertiesButton": "Presses a button in the properties of an input.<br><br>Some known propertyName values are:<br>refreshnocache - Browser source reload button<br><br>Note: Use this in cases where there is a button in the properties of an input that cannot be accessed in any other way. For example, browser sources, where there is a refresh button.",
    "GetTransitionKindList": "Gets an array of all available transition kinds.<br><br>Similar to GetInputKindList",
    "GetSceneTransitionList": "Gets an array of all scene transitions in OBS.",
    "GetCurrentSceneTransition": "Gets information about the current scene transition.",
    "SetCurrentSceneTransition": "Sets the current scene transition.<br><br>Small note: While the namespace of scene transitions is generally unique, that uniqueness is not a guarantee as it is with other resources like inputs.",
    "SetCurrentSceneTransitionDuration": "Sets the duration of the current scene transition, if it is not fixed.",
    "SetCurrentSceneTransitionSettings": "Sets the settings of the current scene transition.",
    "GetCurrentSceneTransitionCursor": "Gets the cursor position of the current scene transition.<br><br>Note: transitionCursor will return 1.0 when the transition is inactive.",
    "TriggerStudioModeTransition": "Triggers the current scene transition. Same functionality as the Transition button in studio mode.",
    "SetTBarPosition": "Sets the position of the TBar.<br><br>Very important note: This will be deprecated and replaced in a future version of obs-websocket.",
    "GetSourceFilterKindList": "Gets an array of all available source filter kinds.<br><br>Similar to GetInputKindList",
    "GetSourceFilterList": "Gets an array of all of a source's filters.",
    "GetSourceFilterDefaultSettings": "Gets the default settings for a filter kind.",
    "CreateSourceFilter": "Creates a new filter, adding it to the specified source.",
    "RemoveSourceFilter": "Removes a filter from a source.",
    "SetSourceFilterName": "Sets the name of a source filter (rename).",
    "GetSourceFilter": "Gets the info for a specific source filter.",
    "SetSourceFilterIndex": "Sets the index position of a filter on a source.",
    "SetSourceFilterSettings": "Sets the settings of a source filter.",
    "SetSourceFilterEnabled": "Sets the enable state of a source filter.",
    "GetSceneItemList": "Gets a list of all scene items in a scene.<br><br>Scenes only",
    "GetGroupSceneItemList": "Basically GetSceneItemList, but for groups.<br><br>Using groups at all in OBS is discouraged, as they are very broken under the hood. Please use nested scenes instead.<br><br>Groups only",
    "GetSceneItemId": "Searches a scene for a source, and returns its id.<br><br>Scenes and Groups",
    "GetSceneItemSource": "Gets the source associated with a scene item.",
    "CreateSceneItem": "Creates a new scene item using a source.<br><br>Scenes only",
    "RemoveSceneItem": "Removes a scene item from a scene.<br><br>Scenes only",
    "DuplicateSceneItem": "Duplicates a scene item, copying all transform and crop info.<br><br>Scenes only",
    "GetSceneItemTransform": "Gets the transform and crop info of a scene item.<br><br>Scenes and Groups",
    "SetSceneItemTransform": "Sets the transform and crop info of a scene item.",
    "GetSceneItemEnabled": "Gets the enable state of a scene item.<br><br>Scenes and Groups",
    "SetSceneItemEnabled": "Sets the enable state of a scene item.<br><br>Scenes and Groups",
    "GetSceneItemLocked": "Gets the lock state of a scene item.<br><br>Scenes and Groups",
    "SetSceneItemLocked": "Sets the lock state of a scene item.<br><br>Scenes and Groups",
    "GetSceneItemIndex": "Gets the index position of a scene item in a scene.<br><br>An index of 0 is at the bottom of the source list in the UI.<br><br>Scenes and Groups",
    "SetSceneItemIndex": "Sets the index position of a scene item in a scene.<br><br>Scenes and Groups",
    "GetSceneItemBlendMode": "Gets the blend mode of a scene item.<br><br>Blend modes:<br><br>OBS_BLEND_NORMAL<br>OBS_BLEND_ADDITIVE<br>OBS_BLEND_SUBTRACT<br>OBS_BLEND_SCREEN<br>OBS_BLEND_MULTIPLY<br>OBS_BLEND_LIGHTEN<br>OBS_BLEND_DARKEN<br><br>Scenes and Groups",
    "SetSceneItemBlendMode": "Sets the blend mode of a scene item.<br><br>Scenes and Groups",
    "GetVirtualCamStatus": "Gets the status of the virtualcam output.",
    "ToggleVirtualCam": "Toggles the state of the virtualcam output.",
    "StartVirtualCam": "Starts the virtualcam output.",
    "StopVirtualCam": "Stops the virtualcam output.",
    "GetReplayBufferStatus": "Gets the status of the replay buffer output.",
    "ToggleReplayBuffer": "Toggles the state of the replay buffer output.",
    "StartReplayBuffer": "Starts the replay buffer output.",
    "StopReplayBuffer": "Stops the replay buffer output.",
    "SaveReplayBuffer": "Saves the contents of the replay buffer output.",
    "GetLastReplayBufferReplay": "Gets the filename of the last replay buffer save file.",
    "GetOutputList": "Gets the list of available outputs.",
    "GetOutputStatus": "Gets the status of an output.",
    "ToggleOutput": "Toggles the status of an output.",
    "StartOutput": "Starts an output.",
    "StopOutput": "Stops an output.",
    "GetOutputSettings": "Gets the settings of an output.",
    "SetOutputSettings": "Sets the settings of an output.",
    "GetStreamStatus": "Gets the status of the stream output.",
    "ToggleStream": "Toggles the status of the stream output.",
    "StartStream": "Starts the stream output.",
    "StopStream": "Stops the stream output.",
    "SendStreamCaption": "Sends CEA-608 caption text over the stream output.",
    "GetRecordStatus": "Gets the status of the record output.",
    "ToggleRecord": "Toggles the status of the record output.",
    "StartRecord": "Starts the record output.",
    "StopRecord": "Stops the record output.",
    "ToggleRecordPause": "Toggles pause on the record output.",
    "PauseRecord": "Pauses the record output.",
    "ResumeRecord": "Resumes the record output.",
    "GetMediaInputStatus": "Gets the status of a media input.<br><br>Media States:<br>OBS_MEDIA_STATE_NONE<br>OBS_MEDIA_STATE_PLAYING<br>OBS_MEDIA_STATE_OPENING<br>OBS_MEDIA_STATE_BUFFERING<br>OBS_MEDIA_STATE_PAUSED<br>OBS_MEDIA_STATE_STOPPED<br>OBS_MEDIA_STATE_ENDED<br>OBS_MEDIA_STATE_ERROR",
    "SetMediaInputCursor": "Sets the cursor position of a media input.<br><br>This request does not perform bounds checking of the cursor position.",
    "OffsetMediaInputCursor": "Offsets the current cursor position of a media input by the specified value.<br><br>This request does not perform bounds checking of the cursor position.",
    "TriggerMediaInputAction": "Triggers an action on a media input.",
    "GetStudioModeEnabled": "Gets whether studio is enabled.",
    "SetStudioModeEnabled": "Enables or disables studio mode",
    "OpenInputPropertiesDialog": "Opens the properties dialog of an input.",
    "OpenInputFiltersDialog": "Opens the filters dialog of an input.",
    "OpenInputInteractDialog": "Opens the interact dialog of an input.",
    "GetMonitorList": "Gets a list of connected monitors and information about them.",
    "OpenVideoMixProjector": "Opens a projector for a specific output video mix.<br><br>Mix types:<br>OBS_WEBSOCKET_VIDEO_MIX_TYPE_PREVIEW<br>OBS_WEBSOCKET_VIDEO_MIX_TYPE_PROGRAM<br>OBS_WEBSOCKET_VIDEO_MIX_TYPE_MULTIVIEW<br><br>Note: This request serves to provide feature parity with 4.x. It is very likely to be changed/deprecated in a future release.",
    "OpenSourceProjector": "Opens a projector for a source.<br><br>Note: This request serves to provide feature parity with 4.x. It is very likely to be changed/deprecated in a future release."
  },
  "EventDes": {},
  "ReqParamsDes": {
    "obsVersion": "Current OBS Studio version",
    "obsWebSocketVersion": "Current OBS WebSocket version",
    "rpcVersion": "Current latest obs-websocket RPC version        ",
    "availableRequests": "Array of available RPC requests for the currently negotiated RPC version        ",
    "supportedImageFormats": "Image formats available in GetSourceScreenshot and SaveSourceScreenshot requests.",
    "platform": "Name of the platform. Usually windows, macos, or ubuntu (linux flavor). Not guaranteed to be any of those",
    "platformDescription": "Description of the platform, like Windows 10 (10.0)",
    "sceneName": "Name of the scene the item",
    "itemName": "UUID of the scene the item is in\t",
    "sceneItemId": "Numeric ID of the scene item\t",
    "sceneItemEnabled": "New enable state of the scene item\t",
    "cpuUsage": "Current CPU usage in percent",
    "memoryUsage": "Amount of memory in MB currently being used by OBS",
    "availableDiskSpace": "Available disk space on the device being used for recording storage",
    "averageFrameRenderTime": "Average time in milliseconds that OBS is taking to render a frame",
    "activeFps": "Current FPS being rendered",
    "renderSkippedFrames": "Number of frames skipped by OBS in the render thread",
    "renderTotalFrames": "Total number of frames outputted by the render thread",
    "outputSkippedFrames": "Number of frames skipped by OBS in the output thread",
    "outputTotalFrames": "Total number of frames outputted by the output thread",
    "webSocketSessionIncomingMessages": "Total number of messages received by obs-websocket from the client",
    "webSocketSessionOutgoingMessages": "Total number of messages sent by obs-websocket to the client",
    "eventData": "Data payload to emit to all receivers\t",
    "vendorName": "Name of the vendor to use\t",
    "requestType": "The request type to call\t",
    "requestData": "Object containing appropriate request data\t",
    "responseData": "Object containing appropriate response data. {} if request does not provide any response data",
    "hotkeys": "Array of hotkey names",
    "hotkeyName": "Name of the hotkey to trigger\t",
    "contextName": "Name of context of the hotkey to trigger\t",
    "keyId": "The OBS key ID to use. See https://github.com/obsproject/obs-studio/blob/master/libobs/obs-hotkeys.h\t",
    "keyModifiers": {
      "title": "Object containing key modifiers to apply",
      "shift": "Press Shift\t",
      "control": "Press CTRL\t",
      "alt": "Press ALT\t",
      "command": "Press CMD (Mac)\t"
    },
    "sleepMillis": "Number of milliseconds to sleep for (if SERIAL_REALTIME mode)\t",
    "sleepFrames": "Number of frames to sleep for (if SERIAL_FRAME mode)\t",
    "realm": "The data realm to select. OBS_WEBSOCKET_DATA_REALM_GLOBAL or OBS_WEBSOCKET_DATA_REALM_PROFILE\t",
    "slotName": "The name of the slot to retrieve data from\t",
    "slotValue": "The value to apply to the slot\t",
    "currentSceneCollectionName": "The name of the current scene collection",
    "sceneCollectionName": "Name of the scene collection to switch to\t",
    "profiles": "Array of all available profiles",
    "profileName": "Name of the profile to switch to\t",
    "parameterCategory": "Category of the parameter to get\t",
    "parameterName": "Name of the parameter to get\t",
    "parameterValue": "Value of the parameter to set. Use null to delete\t",
    "fpsNumerator": "Numerator of the fractional FPS value\t",
    "fpsDenominator": "Denominator of the fractional FPS value\t",
    "baseWidth": "Width of the base (canvas) resolution in pixels\t",
    "baseHeight": "Height of the base (canvas) resolution in pixels\t",
    "outputWidth": "Width of the output resolution in pixels\t",
    "outputHeight": "Height of the output resolution in pixels\t",
    "streamServiceType": "Type of stream service to apply. Example: rtmp_common or rtmp_custom\t",
    "streamServiceSettings": "Settings to apply to the service\t",
    "recordDirectory": "Output directory\t",
    "sourceName": "Name of the source to get the active state of\t",
    "sourceUuid": "UUID of the source to get the active state of\t",
    "imageFormat": "Image compression format to use. Use GetVersion to get compatible image formats\t",
    "imageWidth": "Width to scale the screenshot to\t",
    "imageHeight": "Height to scale the screenshot to\t",
    "imageCompressionQuality": "Compression quality to use. 0 for high compression, 100 for uncompressed. -1 to use \"default\" (whatever that means, idk)\t",
    "imageFilePath": "Path to save the screenshot file to. Eg. C:\\Users\\user\\Desktop\\screenshot.png\t",
    "sceneUuid": "UUID of the scene",
    "newSceneName": "New name for the scene\t",
    "transitionDuration": "Duration to use for any overridden transition. Specify null to remove\t",
    "transitionName": "Name of the scene transition to use as override. Specify null to remove\t",
    "inputKind": "The kind of input",
    "unversioned": "True == Return all kinds as unversioned, False == Return with version suffixes (if available)",
    "inputName": "Name of the new input to created\t",
    "inputSettings": "Settings object of input",
    "RemoveInput": {
      "inputName": "Name of the input to remove\t",
      "inputUuid": "UUID of the input to remove\t"
    },
    "SetInputName": {
      "inputName": "Current input name\t",
      "inputUuid": "Current input UUID\t",
      "newInputName": "New name for the input\t"
    },
    "GetInputDefaultSettings": {
      "inputName": "Input kind to get the default settings for",
      "defaultInputSettings": "Object of default settings for the input kind"
    },
    "GetInputSettings": {
      "inputName": "Name of the input to get the settings of\t",
      "inputUuid": "UUID of the input to get the settings of\t",
      "inputSettings": "Object of settings for the input",
      "inputKind": "The kind of the input"
    },
    "SetInputSettings": {
      "inputName": "Name of the input to set the settings of\t",
      "inputUuid": "UUID of the input to set the settings of\t",
      "inputSettings": "Object of settings to apply\t",
      "overlay": "True == apply the settings on top of existing ones, False == reset the input to its defaults, then apply settings.\t"
    },
    "GetInputMute": {
      "inputMuted": "Whether the input is muted",
      "inputName": "Name of input to get the mute state of\t",
      "inputUuid": "UUID of input to get the mute state of\t"
    },
    "SetInputMute": {
      "inputMuted": "Whether to mute the input or not\t",
      "inputUuid": "UUID of the input to set the mute state of\t",
      "inputName": "Name of the input to set the mute state of\t"
    },
    "ToggleInputMute": {
      "inputName": "Name of the input to toggle the mute state of\t",
      "inputUuid": "UUID of the input to toggle the mute state of\t"
    },
    "GetInputVolume": {
      "inputUuid": "UUID of the input to get the volume of\t",
      "inputName": "Name of the input to get the volume of\t"
    },
    "SetInputVolume": {
      "inputVolumeMul": "Volume setting in mul\t",
      "inputVolumeDb": "Volume setting in dB\t",
      "inputName": "Name of the input to set the volume of\t",
      "inputUuid": "UUID of the input to set the volume of\t"
    },
    "GetInputAudioBalance": {
      "inputUuid": "UUID of the input to get the audio balance of\t",
      "inputName": "Name of the input to get the audio balance of\t"
    },
    "SetInputAudioBalance": {
      "inputAudioBalance": "New audio balance value\t",
      "inputUuid": "UUID of the input to set the audio balance of\t",
      "inputName": "Name of the input to set the audio balance of\t"
    },
    "GetInputAudioSyncOffset": {
      "inputUuid": "UUID of the input to get the audio sync offset of\t",
      "inputName": "Name of the input to get the audio sync offset of\t"
    },
    "SetInputAudioSyncOffset": {
      "inputAudioSyncOffset": "New audio sync offset in milliseconds\t",
      "inputUuid": "UUID of the input to set the audio sync offset of\t",
      "inputName": "Name of the input to set the audio sync offset of\t"
    },
    "GetInputAudioMonitorType": {
      "inputUuid": "UUID of the input to get the audio monitor type of\t",
      "inputName": "Name of the input to get the audio monitor type of\t"
    },
    "SetInputAudioMonitorType": {
      "monitorType": "Audio monitor type\t",
      "inputUuid": "UUID of the input to set the audio monitor type of\t",
      "inputName": "Name of the input to set the audio monitor type of\t"
    },
    "GetInputAudioTracks": {
      "inputUuid": "UUID of the input\t",
      "inputName": "Name of the input\t"
    },
    "SetInputAudioTracks": {
      "inputName": "Name of the input\t",
      "inputUuid": "UUID of the input\t",
      "inputAudioTracks": "Track settings to apply\t"
    },
    "GetInputPropertiesListPropertyItems": {
      "propertyName": "Name of the list property to get the items of\t",
      "inputUuid": "UUID of the input\t",
      "inputName": "Name of the input\t"
    },
    "PressInputPropertiesButton": {
      "propertyName": "Name of the button property to press\t",
      "inputUuid": "UUID of the input\t",
      "inputName": "Name of the input\t"
    }
  },
  "ResParamsDes": {
    "obsVersion": "Current OBS Studio version",
    "obsWebSocketVersion": "Current OBS WebSocket version",
    "rpcVersion": "Current latest obs-websocket RPC version        ",
    "availableRequests": "Array of available RPC requests for the currently negotiated RPC version        ",
    "supportedImageFormats": "Image formats available in GetSourceScreenshot and SaveSourceScreenshot requests.",
    "platform": "Name of the platform. Usually windows, macos, or ubuntu (linux flavor). Not guaranteed to be any of those",
    "platformDescription": "Description of the platform, like Windows 10 (10.0)",
    "sceneName": "Name of the scene the item is in",
    "itemName": "UUID of the scene the item is in\t",
    "sceneItemId": "Numeric ID of the scene item\t",
    "sceneItemEnabled": "New enable state of the scene item\t",
    "cpuUsage": "Current CPU usage in percent",
    "memoryUsage": "Amount of memory in MB currently being used by OBS",
    "availableDiskSpace": "Available disk space on the device being used for recording storage",
    "averageFrameRenderTime": "Average time in milliseconds that OBS is taking to render a frame",
    "activeFps": "Current FPS being rendered",
    "renderSkippedFrames": "Number of frames skipped by OBS in the render thread",
    "renderTotalFrames": "Total number of frames outputted by the render thread",
    "outputSkippedFrames": "Number of frames skipped by OBS in the output thread",
    "outputTotalFrames": "Total number of frames outputted by the output thread",
    "webSocketSessionIncomingMessages": "Total number of messages received by obs-websocket from the client",
    "webSocketSessionOutgoingMessages": "Total number of messages sent by obs-websocket to the client",
    "eventData": "Data payload to emit to all receivers\t",
    "vendorName": "Name of the vendor to use\t",
    "requestType": "The request type to call\t",
    "requestData": "Object containing appropriate request data\t",
    "responseData": "Object containing appropriate response data. {} if request does not provide any response data",
    "hotkeys": "Array of hotkey names",
    "hotkeyName": "Name of the hotkey to trigger\t",
    "contextName": "Name of context of the hotkey to trigger\t",
    "keyId": "The OBS key ID to use. See https://github.com/obsproject/obs-studio/blob/master/libobs/obs-hotkeys.h\t",
    "keyModifiers": {
      "title": "Object containing key modifiers to apply",
      "shift": "Press Shift\t",
      "control": "Press CTRL\t",
      "alt": "Press ALT\t",
      "command": "Press CMD (Mac)\t"
    },
    "sleepMillis": "Number of milliseconds to sleep for (if SERIAL_REALTIME mode)\t",
    "sleepFrames": "Number of frames to sleep for (if SERIAL_FRAME mode)\t",
    "realm": "The data realm to select. OBS_WEBSOCKET_DATA_REALM_GLOBAL or OBS_WEBSOCKET_DATA_REALM_PROFILE\t",
    "slotName": "The name of the slot to retrieve data from\t",
    "slotValue": "Value associated with the slot. null if not set",
    "currentSceneCollectionName": "The name of the current scene collection",
    "sceneCollections": "Array of all available scene collections",
    "profiles": "Array of all available profiles",
    "sceneCollectionName": "The name of the current profile",
    "parameterValue": "Value associated with the parameter. null if not set and no default",
    "defaultParameterValue": "defaultParameterValue",
    "fpsNumerator": "Numerator of the fractional FPS value",
    "fpsDenominator": "Denominator of the fractional FPS value",
    "outputHeight": "Height of the output resolution in pixels",
    "outputWidth": "Width of the output resolution in pixels",
    "baseHeight": "Height of the base (canvas) resolution in pixels",
    "baseWidth": "Width of the base (canvas) resolution in pixels",
    "streamServiceType": "Stream service type, like rtmp_custom or rtmp_common",
    "streamServiceSettings": "Stream service settings",
    "recordDirectory": "Output directory",
    "videoActive": "Whether the source is showing in Program",
    "videoShowing": "Whether the source is showing in the UI (Preview, Projector, Properties)",
    "imageData": "Base64-encoded screenshot",
    "currentProgramSceneName": "Current program scene name. Can be null if internal state desync",
    "currentProgramSceneUuid": "Current program scene UUID. Can be null if internal state desync",
    "scenes": "Array of scenes",
    "currentPreviewSceneUuid": "Current preview scene UUID. null if not in studio mode",
    "currentPreviewSceneName": "Current preview scene name. null if not in studio mode",
    "groups": "Array of group names",
    "sceneUuid": "scene UUID",
    "transitionName": "Name of the overridden scene transition, else null",
    "transitionDuration": "Duration of the overridden scene transition, else null",
    "inputs": "Array of inputs",
    "inputKinds": "Array of input kinds",
    "desktop1": "Name of the Desktop Audio input",
    "desktop2": "Name of the Desktop Audio 2 input",
    "mic1": "Name of the Mic/Auxiliary Audio input",
    "mic2": "Name of the Mic/Auxiliary Audio 2 input",
    "mic3": "Name of the Mic/Auxiliary Audio 3 input",
    "mic4": "Name of the Mic/Auxiliary Audio 4 input",
    "CreateInput": {
      "inputUuid": "UUID of the newly created input",
      "sceneItemId": "ID of the newly created scene item"
    },
    "ToggleInputMute": {
      "inputMuted": "Whether the input has been muted or unmuted"
    },
    "GetInputVolume": {
      "inputVolumeMul": "Volume setting in mul",
      "inputVolumeDb": "Volume setting in dB"
    },
    "GetInputAudioBalance": {
      "inputAudioBalance": "Audio balance value from 0.0-1.0"
    },
    "GetInputAudioSyncOffset": {
      "inputAudioSyncOffset": "Audio sync offset in milliseconds"
    },
    "GetInputAudioMonitorType": {
      "inputAudioSyncOffset": "Audio monitor type"
    },
    "GetInputAudioTracks": {
      "inputAudioTracks": "Object of audio tracks and associated enable states",
      "propertyItems": "Array of items in the list property"
    }
  },
  "Actions": {
    "Send": "Send",
    "Clear": "Clear",
    "ClickToExpand": "Click to expand"
  }
}
